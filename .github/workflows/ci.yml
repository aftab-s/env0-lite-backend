name: CI - Test and Build

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop, 'feature/*', 'hotfix/*' ]

env:
  NODE_VERSION: '20'
  APP_PORT: '5000'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Type check
      run: npm run type-check

    - name: Build application
      run: npm run build

    # Uncomment when you have tests
    # - name: Run tests
    #   run: npm test

  docker-build-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (test only)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: env0-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        # Start the container
        docker run --rm -d --name env0-backend-test -p ${{ env.APP_PORT }}:${{ env.APP_PORT }} env0-backend:test
        
        # Wait for the application to start with timeout
        timeout 30s bash -c 'until curl -f http://localhost:${{ env.APP_PORT }}; do sleep 2; done' || {
          echo "Application failed to start within 30 seconds"
          docker logs env0-backend-test
          docker stop env0-backend-test
          exit 1
        }
        
        # Clean up
        docker stop env0-backend-test